#!/bin/bash
PATH=./node_modules/.bin:$PATH
################################################################################
################################### HELPERS ####################################
################################################################################
function print_row {
	printf "  %-10s %-10s\n" "$1" "$2"
}
################################################################################
##################################### PROD #####################################
################################################################################
function prod_with_vagrant_start {
	vagrant up
}

function prod_with_vagrant_stop {
	vagrant halt
}

function prod_with_vagrant_destroy {
	vagrant destroy
}

function task:prod_with_vagrant {
	local target=$1
	shift

	case $target in
		start) prod_with_vagrant_start "$@";;
		stop) prod_with_vagrant_stop "$@";;
		destroy) prod_with_vagrant_destroy "$@";;
		*)
			echo "options:"
			print_row "start" "start vm"
			print_row "stop" "stop vm"
			print_row "destroy" "destroy vm"
			;;
	esac
}
################################################################################
################################# PROD DOCKER ##################################
################################################################################
function prod_with_docker_start {
	docker compose --env-file ./.env.production.local -f docker-compose.yml -f docker-compose.prod.yml up --build
}

function task:prod_with_docker {
	local target=$1
	shift

	case $target in
		start) prod_with_docker_start "$@";;
		*)
			echo "options:"
			print_row "start" "start vm"
			;;
	esac
}
################################################################################
###################################### DEV #####################################
################################################################################
function dev_with_docker_start {
	#	run in parallel
	yarn dev --filter=lit-wc &
	docker compose -f docker-compose.yml -f docker-compose.dev.yml up --build
}

function task:dev_with_docker {
	local target=$1
	shift

	case $target in
		start) dev_with_docker_start "$@";;
		*)
			echo "options:"
			print_row "start" "start vm"
			;;
	esac
}
################################################################################
################################### TASKFILE ###################################
################################################################################
function task:default {
	task:help
}

function task:help {
	echo "$0 <task> <args>"
	echo "Tasks:"

	# We pick out the `task:*` functions
	compgen -A function | sed -En 's/task:(.*)/\1/p' | cat -n
}

TIMEFORMAT="Task completed in %3lR"
# shellcheck disable=SC2145
time "task:${@:-default}"
################################################################################
##################################### REFS #####################################
################################################################################
# https://github.com/adriancooney/Taskfile
